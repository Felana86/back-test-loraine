# FROM node:18-alpine as build

# WORKDIR /app

# COPY package*.json ./

# RUN npm cache clean --force

# RUN npm install 

# COPY . .


# # prisma generate and populate the database
# RUN npx prisma generate


# EXPOSE 3000

# CMD [  "npm", "start","dev", "start:migrate:prod", "npm","run","migrate"] 


FROM node:18-alpine as build

WORKDIR /app

COPY package*.json ./
COPY prisma ./prisma ./  
# If using Prisma

RUN npm install --legacy-peer-deps 
# or npm ci for production

COPY . .

RUN npx prisma generate # If using Prisma

RUN npm run build

# *** NEW AND CRUCIAL STEP: Create a new, empty node_modules folder ***
RUN rm -rf node_modules && mkdir node_modules

# *** NEW AND CRUCIAL STEP: Install ONLY production dependencies ***
RUN npm install --legacy-peer-deps --omit=dev 
# or npm ci --omit=dev for production

# Smaller final image
FROM node:18-alpine

WORKDIR /app

COPY package*.json ./
COPY prisma ./prisma ./
# If using Prisma

# *** COPY ONLY THE PRODUCTION node_modules ***
COPY --from=build /app/node_modules ./node_modules

COPY --from=build /app/dist ./dist
COPY --from=build /app/.env ./.env 
# If using environment variables
COPY --from=build /app/prisma ./prisma 
# If using Prisma


EXPOSE 3000

CMD ["node", "dist/main.js"] 
# Adjust entrypoint if necessary