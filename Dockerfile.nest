# FROM node:18-alpine as build

# WORKDIR /app

# COPY package*.json ./

# RUN npm cache clean --force

# RUN npm install 

# COPY . .


# # prisma generate and populate the database
# RUN npx prisma generate


# EXPOSE 3000

# CMD [  "npm", "start","dev", "start:migrate:prod", "npm","run","migrate"] 

FROM node:18-alpine as build

WORKDIR /app

COPY package*.json ./
COPY prisma ./prisma ./  
# If using Prisma

RUN npm install --legacy-peer-deps # Install ALL dependencies

COPY . .

RUN npx prisma generate # If using Prisma

RUN npm run build

# Smaller final image
FROM node:18-alpine

WORKDIR /app

COPY package*.json ./
COPY prisma ./prisma ./  
# If using Prisma

# Copy ALL node_modules from the build stage
COPY --from=build /app/node_modules ./node_modules

COPY --from=build /app/dist ./dist
#COPY --from=build /app/.env ./.env
# If using environment variables
COPY --from=build /app/prisma ./prisma 
# If using Prisma

# Optimize: Remove dev dependencies in the final image (optional but recommended)
RUN npm prune --omit=dev  
# or yarn autoclean --omit=dev

EXPOSE 3000

CMD ["node", "dist/src/main.js"] 
# Adjust entrypoint if necessary